openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/author/:
    get:
      operationId: listAuthors
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    post:
      operationId: createAuthor
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
  /api/v1/author/{id}/:
    get:
      operationId: retrieveAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Muallif.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    put:
      operationId: updateAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Muallif.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Muallif.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Author'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAuthor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Muallif.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/category/:
    get:
      operationId: listCategorys
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/category/{id}/:
    get:
      operationId: retrieveCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Kategoriya.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Kategoriya.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Kategoriya.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Kategoriya.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/tags/:
    get:
      operationId: listTags
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tags'
          description: ''
      tags:
      - api
    post:
      operationId: createTags
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tags'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
          description: ''
      tags:
      - api
  /api/v1/tags/{id}/:
    get:
      operationId: retrieveTags
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Tag.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
          description: ''
      tags:
      - api
    put:
      operationId: updateTags
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Tag.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tags'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTags
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Tag.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tags'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tags'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tags'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tags'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTags
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Tag.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/post/:
    get:
      operationId: listPosts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - api
    post:
      operationId: createPost
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - api
  /api/v1/post/{id}/:
    get:
      operationId: retrievePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Maqola.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - api
    put:
      operationId: updatePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Maqola.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Maqola.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Post'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPost
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this Maqola.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/get_question/:
    get:
      operationId: listget_contact_request_views
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/v1/get_faq_view/:
    get:
      operationId: listget_contact_request_views
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/v1/create_request_question/:
    post:
      operationId: createContactUsRequest
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/create_faq/:
    post:
      operationId: createFAQ
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FAQ'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FAQ'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FAQ'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FAQ'
          description: ''
      tags:
      - api
components:
  schemas:
    Author:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 150
        image:
          type: string
          format: binary
        description:
          type: string
        content:
          type: string
        facebook_url:
          type: string
          maxLength: 300
        twitter_url:
          type: string
          maxLength: 300
        instagram_url:
          type: string
          maxLength: 300
        pinterest_url:
          type: string
          maxLength: 300
        is_top:
          type: boolean
      required:
      - title
      - image
      - description
      - content
      - facebook_url
      - twitter_url
      - instagram_url
      - pinterest_url
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_ad:
          type: string
          format: date-time
          readOnly: true
        updated_ad:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 200
        image:
          type: string
          format: binary
        count_post:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
      required:
      - title
      - image
    Tags:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_ad:
          type: string
          format: date-time
          readOnly: true
        updated_ad:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 250
      required:
      - title
    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_ad:
          type: string
          format: date-time
          readOnly: true
        updated_ad:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 250
        image:
          type: string
          format: binary
        short_content:
          type: string
          maxLength: 300
        content:
          type: string
        published_date:
          type: string
          format: date-time
          readOnly: true
        read_min:
          type: string
          maxLength: 200
        is_featured:
          type: boolean
        is_popular:
          type: boolean
        category:
          type: integer
        author:
          type: integer
        tags:
          type: array
          items:
            type: integer
      required:
      - title
      - image
      - short_content
      - content
      - read_min
      - category
      - author
      - tags
    FAQ:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_ad:
          type: string
          format: date-time
          readOnly: true
        updated_ad:
          type: string
          format: date-time
          readOnly: true
        question:
          type: string
          maxLength: 300
        answer:
          type: string
      required:
      - question
      - answer
